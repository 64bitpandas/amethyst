<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title/><link>https://amethyst.bencuan.me/setup/</link><description>Recent content on</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://amethyst.bencuan.me/setup/index.xml" rel="self" type="application/rss+xml"/><item><title>Setup</title><link>https://amethyst.bencuan.me/setup/setup/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://amethyst.bencuan.me/setup/setup/</guid><description>Getting Started # Setting up Amethyst requires a basic understanding of git. If you are unfamiliar, this resource is a great place to start!
Forking # A fork is a copy of a repository. Forking a repository allows you to freely experiment with changes without affecting the original project.
Navigate to the GitHub repository for the Amethyst project:
üìÅ Amethyst Repository
Then, Fork the repository into your own GitHub account.</description></item><item><title>Editing Content</title><link>https://amethyst.bencuan.me/setup/editing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://amethyst.bencuan.me/setup/editing/</guid><description>Editing # Amethyst runs on top of Hugo so all notes are written in Markdown.
Folder Structure # Here&amp;rsquo;s a rough overview of what&amp;rsquo;s what.
All notes you want to publish should go in the /content folder. To make edits, you can open any of the files and make changes directly and save it. You can organize content into any subfolder you&amp;rsquo;d like.
To edit the main home page, open /content/_index.</description></item><item><title>Obsidian Vault Integration</title><link>https://amethyst.bencuan.me/setup/obsidian/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://amethyst.bencuan.me/setup/obsidian/</guid><description>Setup # Obsidian is the preferred way to use Amethyst. You can either create a new Obsidian Vault or link one that your already have.
New Vault # If you don&amp;rsquo;t have an existing Vault, download Obsidian and create a new Vault in the /content folder that you created and cloned during the setup step.
Linking an existing Vault (simple) # The easiest way to use an existing Vault is to copy all of your files (directory and hierarchies intact) into the /content folder.</description></item><item><title>Preview Changes</title><link>https://amethyst.bencuan.me/setup/preview-changes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://amethyst.bencuan.me/setup/preview-changes/</guid><description>If you&amp;rsquo;d like to preview what your site looks like before deploying it to the internet, the following instructions guide you through installing the proper dependencies to run it locally.
Install hugo-obsidian # This step will generate the list of backlinks for Hugo to parse. Ensure you have Go (&amp;gt;= 1.16) installed.
# Install and link `hugo-obsidian` locally go install github.com/jackyzha0/hugo-obsidian@latest If you are running into an error saying that command not found: hugo-obsidian, make sure you set your GOPATH correctly!</description></item><item><title>Custom Domain</title><link>https://amethyst.bencuan.me/setup/custom-Domain/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://amethyst.bencuan.me/setup/custom-Domain/</guid><description>Registrar # This step is only applicable if you are using a custom domain! If you are using a &amp;lt;YOUR-USERNAME&amp;gt;.github.io domain, you can skip this step.
For this last bit to take effect, you also need to create a CNAME record with the DNS provider you register your domain with (i.e. NameCheap, Google Domains).
GitHub has some documentation on this, but the tldr; is to
Go to your forked repository (github.</description></item><item><title>Customization</title><link>https://amethyst.bencuan.me/setup/config/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://amethyst.bencuan.me/setup/config/</guid><description>Configuration # Amethyst is designed to be extremely configurable. You can find the bulk of the configuration scattered throughout the repository depending on how in-depth you&amp;rsquo;d like to get.
The majority of configuration can be found under config.yaml. An example, with descriptions for each setting, can be found here.
Code Block Titles # To add code block titles with Amethyst:
Ensure that code block titles are enabled in the configuration:</description></item><item><title>Deploying Amethyst to the Web</title><link>https://amethyst.bencuan.me/setup/hosting/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://amethyst.bencuan.me/setup/hosting/</guid><description>Hosting on GitHub Pages # Amethyst is designed to be effortless to deploy. If you forked and cloned Amethyst directly from the repository, everything should already be good to go! Follow the steps below.
Enable GitHub Actions # By default, GitHub disables workflows from running automatically on Forked Repostories. Head to the &amp;lsquo;Actions&amp;rsquo; tab of your forked repository and Enable Workflows to setup deploying your site!
Enable GitHub Actions</description></item><item><title>Ignoring Notes</title><link>https://amethyst.bencuan.me/setup/ignore-notes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://amethyst.bencuan.me/setup/ignore-notes/</guid><description>Edit ignoreFiles in config.yaml to include paths you&amp;rsquo;d like to exclude from being rendered.
... ignoreFiles: [ &amp;#34;/content/templates/*&amp;#34;, &amp;#34;/content/private/*&amp;#34;, &amp;#34;&amp;lt;your path here&amp;gt;&amp;#34; ] ignoreFiles supports the use of Regular Expressions (RegEx) so you can ignore patterns as well (e.g. ignoring all .pngs by doing \\.png$). To ignore a specific file, you can also add the tag draft: true to the frontmatter of a note.
--- title: Some Private Note draft: true --- .</description></item><item><title>Search</title><link>https://amethyst.bencuan.me/setup/search/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://amethyst.bencuan.me/setup/search/</guid><description>Amethyst supports two modes of searching through content.
Full-text # Full-text search is the default in Amethyst. It produces results that exactly match the search query. This is easier to setup but usually produces lower quality matches.
# the default option enableSemanticSearch: false Natural Language # Natural language search is powered by Operand. It understands language like a person does and finds results that best match user intent. In this sense, it is closer to how Google Search works.</description></item><item><title>Troubleshooting and FAQ</title><link>https://amethyst.bencuan.me/setup/troubleshooting/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://amethyst.bencuan.me/setup/troubleshooting/</guid><description>Still having trouble? Here are a list of common questions and problems people encounter when installing Amethyst.
Does Amethyst have Latex support? # Yes! See LaTeX for a brief demo.
Can I use &amp;lt;Obsidian Plugin&amp;gt; in Amethyst? # Unless it produces direct Markdown output in the file, no. There currently is no way to bundle plugin code with Amethyst.
The easiest way would be to add your own HTML partial that supports the functionality you are looking for.</description></item><item><title>Updating</title><link>https://amethyst.bencuan.me/setup/updating/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://amethyst.bencuan.me/setup/updating/</guid><description>Haven&amp;rsquo;t updated Amethyst in a while and want all the cool new optimizations? On Unix/Mac systems you can run the following command for a one-line update! This command will show you a log summary of all commits since you last updated, press q to acknowledge this. Then, it will show you each change in turn and press y to accept the patch or n to reject it. Usually you should press y for most of these unless it conflicts with existing changes you&amp;rsquo;ve made!</description></item></channel></rss>